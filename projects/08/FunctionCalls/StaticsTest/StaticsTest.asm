
//INIT
@256
D=A
@SP
M=D
@func.Sys.init
0;JMP
//function Class1.set 0
(func.Class1.set)
@LCL
D=M
@0
A=D+A
M=0
(func.Class1.set.initloop)
@0
D=A
@LCL
A=M+D
D=M
@0
D=A-D
@func.Class1.set.exit
D;JLE
@LCL
D=M
@0
A=D+A
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@func.Class1.set.initloop
0;JMP
(func.Class1.set.exit)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
M=M-1
A=M
D=M
@FunctionCalls.StaticsTest.Class1.vm.0
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
M=M-1
A=M
D=M
@FunctionCalls.StaticsTest.Class1.vm.1
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
A=D-1
D=M
@THAT
M=D
@SP
A=M
D=M
@2
A=D-A
D=M
@THIS
M=D
@SP
A=M
D=M
@3
A=D-A
D=M
@ARG
M=D
@SP
A=M
D=M
@4
A=D-A
D=M
@LCL
M=D
@SP
A=M
D=M
@5
A=D-A
D=M
@SP
A=M-1
A=M+1
M=D
D=A
@SP
M=D
@SP
A=M
A=M
0;JMP
//function Class1.get 0
(func.Class1.get)
@LCL
D=M
@0
A=D+A
M=0
(func.Class1.get.initloop)
@0
D=A
@LCL
A=M+D
D=M
@0
D=A-D
@func.Class1.get.exit
D;JLE
@LCL
D=M
@0
A=D+A
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@func.Class1.get.initloop
0;JMP
(func.Class1.get.exit)
//push static 0
@FunctionCalls.StaticsTest.Class1.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@FunctionCalls.StaticsTest.Class1.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//return
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
A=D-1
D=M
@THAT
M=D
@SP
A=M
D=M
@2
A=D-A
D=M
@THIS
M=D
@SP
A=M
D=M
@3
A=D-A
D=M
@ARG
M=D
@SP
A=M
D=M
@4
A=D-A
D=M
@LCL
M=D
@SP
A=M
D=M
@5
A=D-A
D=M
@SP
A=M-1
A=M+1
M=D
D=A
@SP
M=D
@SP
A=M
A=M
0;JMP
//function Sys.init 0
(func.Sys.init)
@LCL
D=M
@0
A=D+A
M=0
(func.Sys.init.initloop)
@0
D=A
@LCL
A=M+D
D=M
@0
D=A-D
@func.Sys.init.exit
D;JLE
@LCL
D=M
@0
A=D+A
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@func.Sys.init.initloop
0;JMP
(func.Sys.init.exit)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set 2
@SP
A=M
M=0
@SP
M=M+1
@func.Class1.set.16.return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@func.Class1.set
0;JMP
(func.Class1.set.16.return)
//pop temp 0
@SP
M=M-1
A=M
D=M
@5
M=D
//push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set 2
@SP
A=M
M=0
@SP
M=M+1
@func.Class2.set.20.return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@func.Class2.set
0;JMP
(func.Class2.set.20.return)
//pop temp 0
@SP
M=M-1
A=M
D=M
@5
M=D
//call Class1.get 0
@SP
A=M
M=0
@SP
M=M+1
@func.Class1.get.22.return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@func.Class1.get
0;JMP
(func.Class1.get.22.return)
//call Class2.get 0
@SP
A=M
M=0
@SP
M=M+1
@func.Class2.get.23.return
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@func.Class2.get
0;JMP
(func.Class2.get.23.return)
//label WHILE
(FunctionCalls.StaticsTest.Sys.vm.WHILE)
//goto WHILE
@FunctionCalls.StaticsTest.Sys.vm.WHILE
0;JMP
//function Class2.set 0
(func.Class2.set)
@LCL
D=M
@0
A=D+A
M=0
(func.Class2.set.initloop)
@0
D=A
@LCL
A=M+D
D=M
@0
D=A-D
@func.Class2.set.exit
D;JLE
@LCL
D=M
@0
A=D+A
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@func.Class2.set.initloop
0;JMP
(func.Class2.set.exit)
//push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@SP
M=M-1
A=M
D=M
@FunctionCalls.StaticsTest.Class2.vm.0
M=D
//push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@SP
M=M-1
A=M
D=M
@FunctionCalls.StaticsTest.Class2.vm.1
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
A=D-1
D=M
@THAT
M=D
@SP
A=M
D=M
@2
A=D-A
D=M
@THIS
M=D
@SP
A=M
D=M
@3
A=D-A
D=M
@ARG
M=D
@SP
A=M
D=M
@4
A=D-A
D=M
@LCL
M=D
@SP
A=M
D=M
@5
A=D-A
D=M
@SP
A=M-1
A=M+1
M=D
D=A
@SP
M=D
@SP
A=M
A=M
0;JMP
//function Class2.get 0
(func.Class2.get)
@LCL
D=M
@0
A=D+A
M=0
(func.Class2.get.initloop)
@0
D=A
@LCL
A=M+D
D=M
@0
D=A-D
@func.Class2.get.exit
D;JLE
@LCL
D=M
@0
A=D+A
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@func.Class2.get.initloop
0;JMP
(func.Class2.get.exit)
//push static 0
@FunctionCalls.StaticsTest.Class2.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@FunctionCalls.StaticsTest.Class2.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//return
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
A=D-1
D=M
@THAT
M=D
@SP
A=M
D=M
@2
A=D-A
D=M
@THIS
M=D
@SP
A=M
D=M
@3
A=D-A
D=M
@ARG
M=D
@SP
A=M
D=M
@4
A=D-A
D=M
@LCL
M=D
@SP
A=M
D=M
@5
A=D-A
D=M
@SP
A=M-1
A=M+1
M=D
D=A
@SP
M=D
@SP
A=M
A=M
0;JMP