function Ball.new 0 
push constant 15 
call Memory.alloc 1 
pop pointer 0 
push argument 0 
pop this 0 
push argument 1 
pop this 1 
push argument 2 
pop this 10 
push argument 3 
push constant 6 
sub 
pop this 11 
push argument 4 
pop this 12 
push argument 5 
push constant 6 
sub 
pop this 13 
push constant 0 
pop this 14 
push pointer 0 
call Ball.show 1 
pop temp 0 
push pointer 0 
return 
function Ball.dispose 0 
push argument 0 
pop pointer 0 
push pointer 0 
call Memory.deAlloc 1 
pop temp 0 
push constant 0 
return 
function Ball.show 0 
push argument 0 
pop pointer 0 
push constant 1 
neg 
call Screen.setColor 1 
pop temp 0 
push pointer 0 
call Ball.draw 1 
pop temp 0 
push constant 0 
return 
function Ball.hide 0 
push argument 0 
pop pointer 0 
push constant 0 
call Screen.setColor 1 
pop temp 0 
push pointer 0 
call Ball.draw 1 
pop temp 0 
push constant 0 
return 
function Ball.draw 0 
push argument 0 
pop pointer 0 
push this 0 
push this 1 
push this 0 
push constant 5 
add 
push this 1 
push constant 5 
add 
call Screen.drawRectangle 4 
pop temp 0 
push constant 0 
return 
function Ball.getLeft 0 
push argument 0 
pop pointer 0 
push this 0 
return 
function Ball.getRight 0 
push argument 0 
pop pointer 0 
push this 0 
push constant 5 
add 
return 
function Ball.setDestination 3 
push argument 0 
pop pointer 0 
push argument 1 
push this 0 
sub 
pop this 2 
push argument 2 
push this 1 
sub 
pop this 3 
push this 2 
call Math.abs 1 
pop local 0 
push this 3 
call Math.abs 1 
pop local 1 
push local 0 
push local 1 
lt 
pop this 7 
push this 7 
not 
if-goto IF.Ball.291 
push local 0 
pop local 2 
push local 1 
pop local 0 
push local 2 
pop local 1 
push this 1 
push argument 2 
lt 
pop this 8 
push this 0 
push argument 1 
lt 
pop this 9 
goto ELSE.Ball.327 
label IF.Ball.291 
push this 0 
push argument 1 
lt 
pop this 8 
push this 1 
push argument 2 
lt 
pop this 9 
label ELSE.Ball.327 
push constant 2 
push local 1 
call Math.multiply 2 
push local 0 
sub 
pop this 4 
push constant 2 
push local 1 
call Math.multiply 2 
pop this 5 
push constant 2 
push local 1 
push local 0 
sub 
call Math.multiply 2 
pop this 6 
push constant 0 
return 
function Ball.move 0 
push argument 0 
pop pointer 0 
push pointer 0 
call Ball.hide 1 
pop temp 0 
push this 4 
push constant 0 
lt 
not 
if-goto IF.Ball.396 
push this 4 
push this 5 
add 
pop this 4 
goto ELSE.Ball.406 
label IF.Ball.396 
push this 4 
push this 6 
add 
pop this 4 
push this 9 
not 
if-goto IF.Ball.418 
push this 7 
not 
if-goto IF.Ball.423 
push this 0 
push constant 4 
add 
pop this 0 
goto ELSE.Ball.433 
label IF.Ball.423 
push this 1 
push constant 4 
add 
pop this 1 
label ELSE.Ball.433 
goto ELSE.Ball.444 
label IF.Ball.418 
push this 7 
not 
if-goto IF.Ball.449 
push this 0 
push constant 4 
sub 
pop this 0 
goto ELSE.Ball.459 
label IF.Ball.449 
push this 1 
push constant 4 
sub 
pop this 1 
label ELSE.Ball.459 
label ELSE.Ball.444 
label ELSE.Ball.406 
push this 8 
not 
if-goto IF.Ball.474 
push this 7 
not 
if-goto IF.Ball.479 
push this 1 
push constant 4 
add 
pop this 1 
goto ELSE.Ball.489 
label IF.Ball.479 
push this 0 
push constant 4 
add 
pop this 0 
label ELSE.Ball.489 
goto ELSE.Ball.500 
label IF.Ball.474 
push this 7 
not 
if-goto IF.Ball.505 
push this 1 
push constant 4 
sub 
pop this 1 
goto ELSE.Ball.515 
label IF.Ball.505 
push this 0 
push constant 4 
sub 
pop this 0 
label ELSE.Ball.515 
label ELSE.Ball.500 
push this 0 
push this 10 
gt 
not 
not 
if-goto IF.Ball.534 
push constant 1 
pop this 14 
push this 10 
pop this 0 
label IF.Ball.534 
push this 0 
push this 11 
lt 
not 
not 
if-goto IF.Ball.555 
push constant 2 
pop this 14 
push this 11 
pop this 0 
label IF.Ball.555 
push this 1 
push this 12 
gt 
not 
not 
if-goto IF.Ball.576 
push constant 3 
pop this 14 
push this 12 
pop this 1 
label IF.Ball.576 
push this 1 
push this 13 
lt 
not 
not 
if-goto IF.Ball.597 
push constant 4 
pop this 14 
push this 13 
pop this 1 
label IF.Ball.597 
push pointer 0 
call Ball.show 1 
pop temp 0 
push this 14 
return 
function Ball.bounce 5 
push argument 0 
pop pointer 0 
push this 2 
push constant 10 
call Math.divide 2 
pop local 2 
push this 3 
push constant 10 
call Math.divide 2 
pop local 3 
push argument 1 
push constant 0 
eq 
not 
if-goto IF.Ball.658 
push constant 10 
pop local 4 
goto ELSE.Ball.666 
label IF.Ball.658 
push this 2 
push constant 0 
lt 
not 
push argument 1 
push constant 1 
eq 
and 
push this 2 
push constant 0 
lt 
push argument 1 
push constant 1 
neg 
eq 
and 
or 
not 
if-goto IF.Ball.703 
push constant 20 
pop local 4 
goto ELSE.Ball.711 
label IF.Ball.703 
push constant 5 
pop local 4 
label ELSE.Ball.711 
label ELSE.Ball.666 
push this 14 
push constant 1 
eq 
not 
if-goto IF.Ball.725 
push constant 506 
pop local 0 
push local 3 
push constant 50 
neg 
call Math.multiply 2 
push local 2 
call Math.divide 2 
pop local 1 
push this 1 
push local 1 
push local 4 
call Math.multiply 2 
add 
pop local 1 
goto ELSE.Ball.758 
label IF.Ball.725 
push this 14 
push constant 2 
eq 
not 
if-goto IF.Ball.765 
push constant 0 
pop local 0 
push local 3 
push constant 50 
call Math.multiply 2 
push local 2 
call Math.divide 2 
pop local 1 
push this 1 
push local 1 
push local 4 
call Math.multiply 2 
add 
pop local 1 
goto ELSE.Ball.795 
label IF.Ball.765 
push this 14 
push constant 3 
eq 
not 
if-goto IF.Ball.802 
push constant 250 
pop local 1 
push local 2 
push constant 25 
neg 
call Math.multiply 2 
push local 3 
call Math.divide 2 
pop local 0 
push this 0 
push local 0 
push local 4 
call Math.multiply 2 
add 
pop local 0 
goto ELSE.Ball.835 
label IF.Ball.802 
push constant 0 
pop local 1 
push local 2 
push constant 25 
call Math.multiply 2 
push local 3 
call Math.divide 2 
pop local 0 
push this 0 
push local 0 
push local 4 
call Math.multiply 2 
add 
pop local 0 
label ELSE.Ball.835 
label ELSE.Ball.795 
label ELSE.Ball.758 
push pointer 0 
push local 0 
push local 1 
call Ball.setDestination 3 
pop temp 0 
push constant 0 
return 
