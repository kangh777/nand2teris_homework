// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    /** Initializes the library. */
    function void init() {
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0){
            return -x;
        }
        else{
            return x;
        }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int mask,bits,shifedX,sum;
        let mask = 1;
        let bits = 16;
        let shifedX = x;
        while(bits>0){
            let bits = bits - 1;
            if (~(mask&y = 0)){
               let sum = sum + shifedX; 
            }
            let shifedX = shifedX + shifedX;
            let mask = mask + mask;
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int result,sign;
        let sign = 1;
        if (x<0){
            let sign = sign*(-1);
        }
        if (y<0){
            let sign = sign*(-1);
        }
        let x = Math.abs(x);
        let y = Math.abs(y);
        if (x<y){
            return 0;
        }
        let result = Math._divideABS(x,(y+y));
        if((x-(2*result*y)) < y){
            return (result+result)*sign;
        }
        return (result+result+1)*sign;
    }
    function int _divideABS(int x, int y) {
        var int result;
        if (x<y|y<0){
            return 0;
        }
        let result = Math._divideABS(x,y+y);
        if((x-(2*result*y)) < y){
            return (result+result);
        }
        return (result+result+1);
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int num,result;
        let num = 128; // 2^7
        while(num>0){
            if ((~(((result+num)*(result+num)) > x))&((result+num)*(result+num)>0)){
                let result = result+num;
                do Output.printInt(result);
            }
            let num = num/2;
        }
        return result;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if(a > b){
            return a;
        }
        return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a > b){
            return b;
        }
        return a;
    }
}
